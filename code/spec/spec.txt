Python:
- Python-Reader
- Python-Backend

Backend:
Definition pseudo_id:
Random String (Numbers and Letters); 16 Characters long.


Smartphone:
-Schlüsselgenerierung RSA - 2048
-AES256 
-->siehe TestResources generate-ssl-certs.sh
-Speicherung public Key Backend B (statisch eincodiert)
-Speicherung public Key Reader R (statisch eincodiert)

Ablauf:
-Verbindung mit Backend (Return Token)
-Key Generation
-Verbindungsaufbau mit Backend (ID, Token, Public Key U) HTTPS
-Handshake mit Reader



>>> Interface Smartphone-Backend:

- Step 1: Register tum_id. Ask for token.
  Request: 	GET /register?tum_id=ga00aaa
  Answer:	Message with JSON body
		{ status: '200',
		  message: 'Token generation successful. Please send public key.',
		  tum_id: 'ga00aaa',
		  pseudo_id: 'sdifuz563',
		  token: '491652672440A20D6BD49B63E60DADB9' }
  Error possibility: 	No key 'tum_id' in request
  Answer:	{ status: 400,
		  message: 'Please set tum_id in the HTTPS request!' }
  Error possibility: 	'tum_id' in request does not have the correct form
  Answer:	{ status: 400,
		  message: 'tum_id does not have the correct form!' }
  Error possibility: 	'tum_id' in request formally correct, 
			but TUMonline does not respond token
  Answer:	{ status: 404,
		  message: 'TUMonline did not answer with a token for this tum_id!' }
  Error possibility:	zu dieser tumid gibt es schon ein token
		echter User würde dieses token dann in tumonline löschen

- Step 2: Check if the user has activated his token in TumOnline
  Request:	GET /tokenactive?tum_id=ga00aaa
  Answer:	Message with JSON body
		{ status: '200',
		  message: 'Token is activated.' }
  Answer possibility 2: 
		{ status: //TODO,
		  message: 'Token is not activated.' }

- Step 3: Hand over public key for storage on the backend.
  Request: 	POST /register
		Content-Type: 'application/json'
		Message body:
		{ tum_id: 'ga00aaa',
		  token: '491652672440A20D6BD49B63E60DADB9',
		  key: 
		   '00:c7:58:d0:41:eb:52:14:eb:80:ac:ef:dd:a5:86:
                    b8:cf:33:e9:a6:b6:3d:de:a1:c5:cd:c5:ed:3d:f2:
                    bf:b1:15:1f:29:fd:2e:50:41:61:98:fc:81:a9:14:
                    da:d0:24:2a:aa:4d:e9:5e:a1:75:20:b4:0a:92:59:
                    bb:f3:e3:96:ad:19:39:d9:28:7f:be:ba:40:dd:a7:
                    97:20:55:8b:40:f9:de:3a:66:61:32:17:9a:87:d9:
                    8c:53:aa:6d:bc:90:cb:85:f4:33:7d:1f:da:91:cc:
                    61:8d:b7:4b:6a:57:59:f5:96:cd:d4:72:32:0f:e4:
                    69:f0:57:6f:94:f8:cb:d0:67:5e:26:7a:e6:ce:68:
                    80:4c:95:67:ed:49:f0:24:99:fb:a6:8b:5f:67:7c:
                    62:f5:6d:45:e6:f2:76:3b:16:3c:3c:8c:09:3b:b1:
                    37:5f:d8:12:76:cf:a3:fd:4b:a6:18:23:e3:39:3a:
                    3d:7c:3c:a8:55:96:bb:e9:72:3e:66:ae:97:55:a1:
                    a5:d8:7e:9f:d4:ba:89:a4:80:67:fa:38:4e:f0:7f:
                    90:30:68:39:4b:76:6f:f8:7a:a1:61:a9:0e:09:76:
                    3a:b3:bd:85:da:e2:7a:42:3a:85:b1:3f:86:f7:9c:
                    ef:98:6c:62:91:0d:89:61:44:65:3f:10:dc:14:b9:
                    8f:83' }
  Answer:	Message with JSON body
		{ status: '200',
		  message: 'Key stored successfully. User registration complete.' }
  Error possibility:	tum_id, token or key missing in the request
  Answer:	{ status: 400,
		  message: 'Please set tum_id, token and key in the request!' }
  Error possibility:	tum_id, token or key do not have the correct format
  Answer:	{ status: 400,
		  message: 'tum_id, token or key do not have the correct form!' }
  Error possibility:	token in the request does not equal the one in the DB
  Answer:	{ status: 400,
		  message: 'token seems to be wrong!' }
  Error possibility:	tum_id is not found in the DB
  Answer:	{ status: 404,
		  message: 'tum_id not found in DB. Please start with step 1!' }



>>> Interface Reader-Backend:

- Smartphone sent its pseudo ID. Now ask backend for the corresponding public key.
  Request:	GET /check?pseudo_id=sdifuz563
  Answer:	Message with JSON body
		{ status: '200',
		  message: ''Valid user. Sending public key.'Valid user. Sending public key.',
		  pseudo_id: 'sdifuz563',
		  student_status: 'student',
		  key: 
		   '00:c7:58:d0:41:eb:52:14:eb:80:ac:ef:dd:a5:86:
                    b8:cf:33:e9:a6:b6:3d:de:a1:c5:cd:c5:ed:3d:f2:
                    bf:b1:15:1f:29:fd:2e:50:41:61:98:fc:81:a9:14:
                    da:d0:24:2a:aa:4d:e9:5e:a1:75:20:b4:0a:92:59:
                    bb:f3:e3:96:ad:19:39:d9:28:7f:be:ba:40:dd:a7:
                    97:20:55:8b:40:f9:de:3a:66:61:32:17:9a:87:d9:
                    8c:53:aa:6d:bc:90:cb:85:f4:33:7d:1f:da:91:cc:
                    61:8d:b7:4b:6a:57:59:f5:96:cd:d4:72:32:0f:e4:
                    69:f0:57:6f:94:f8:cb:d0:67:5e:26:7a:e6:ce:68:
                    80:4c:95:67:ed:49:f0:24:99:fb:a6:8b:5f:67:7c:
                    62:f5:6d:45:e6:f2:76:3b:16:3c:3c:8c:09:3b:b1:
                    37:5f:d8:12:76:cf:a3:fd:4b:a6:18:23:e3:39:3a:
                    3d:7c:3c:a8:55:96:bb:e9:72:3e:66:ae:97:55:a1:
                    a5:d8:7e:9f:d4:ba:89:a4:80:67:fa:38:4e:f0:7f:
                    90:30:68:39:4b:76:6f:f8:7a:a1:61:a9:0e:09:76:
                    3a:b3:bd:85:da:e2:7a:42:3a:85:b1:3f:86:f7:9c:
                    ef:98:6c:62:91:0d:89:61:44:65:3f:10:dc:14:b9:
                    8f:83' }
  Error possibility:	pseudo_id not found in DB
  Answer:	{ status: '404',
		  message: 'This pseudo_id does not exist!' }
  Error possibility:	Corresponding DB entry has no key -> registration not finished
  Answer:	{ status: '404',
		  message: 'No key for this pseudo_id!' }
  Error possibility:	The corresponding person is no longer a student
  Answer:	{ status: '403',
		  message: 'This person is no longer a student!' }
  Error possibility:	pseudo_id has the wrong format
  Answer:	{ status: '400',
		  message: 'pseudo_id does not have the correct form!' }




>>> General server error message:
  Could happen if the server runs into an internal error and cannot respond anymore.
  Answer:	{ status: 500, message: <some message> }

